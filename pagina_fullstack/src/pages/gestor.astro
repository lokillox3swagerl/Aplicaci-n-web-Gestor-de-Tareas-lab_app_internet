---
import { getTasksByUser, createTask, updateTask, deleteTask } from "../lib/api";

let message = "";
let errorMsg = "";

// 1) Obtener id_usuario desde cookie
const uidCookie = Astro.cookies.get("uid")?.value;
const id_usuario = uidCookie ? Number(uidCookie) : 0;
if (!id_usuario) {
  return Astro.redirect("/login");
}

// 2) Manejar POST (crear / actualizar estado / borrar)
if (Astro.request.method === "POST") {
  try {
    const form = await Astro.request.formData();
    const action = String(form.get("action") || "create");

    if (action === "create") {
      const titulo = String(form.get("titulo") || "").trim();
      const descripcion = String(form.get("descripcion") || "").trim();
      const prioridad = String(form.get("prioridad") || "media");
      const estado = String(form.get("estado") || "por_hacer");

      if (!titulo) throw new Error("El título es obligatorio");

      await createTask({ id_usuario, titulo, descripcion, prioridad, estado });
      message = "Tarea creada";
    }

    if (action === "delete") {
      const id_tarea = Number(form.get("id_tarea") || 0);
      if (!id_tarea) throw new Error("Falta id_tarea");
      await deleteTask(id_tarea);
      message = "Tarea eliminada";
    }

    if (action === "set_status") {
      const id_tarea = Number(form.get("id_tarea") || 0);
      const nuevo = String(form.get("estado") || "por_hacer");
      if (!id_tarea) throw new Error("Falta id_tarea");
      await updateTask(id_tarea, { estado: nuevo });
      message = "Estado actualizado";
    }
  } catch (err: any) {
    console.error("[gestor] POST error:", err);
    errorMsg = err?.message || "No se pudo procesar la solicitud";
  }
}

// 3) Cargar tareas del usuario
const tasks = await getTasksByUser(id_usuario);
const title = "Gestor de Tareas";
---

<html lang="es">
  <head>
    <meta charset="utf-8" />
    <title>{title}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="/src/styles/gestor.css" />
    <script src="/src/scripts/gestor.js" defer></script>
  </head>
  <body>
    <main class="container">
      <h1 class="page-title">{title}</h1>

      {message && <p class="mensaje ok">{message}</p>}
      {errorMsg && <p class="mensaje error">⚠ {errorMsg}</p>}

      <!-- Formularo MUY simple -->
      <form method="POST" class="card card-form" id="task-form">
        <div class="grid">
          <div class="field">
            <label class="label">Título *</label>
            <input class="input" name="titulo" required />
          </div>

          <div class="field">
            <label class="label">Descripción</label>
            <input class="input" name="descripcion" />
          </div>

          <div class="field">
            <label class="label">Prioridad</label>
            <select class="input" name="prioridad">
              <option value="baja">Baja</option>
              <option value="media" selected>Media</option>
              <option value="alta">Alta</option>
            </select>
          </div>

          <div class="field">
            <label class="label">Estado</label>
            <select class="input" name="estado">
              <option value="por_hacer" selected>Por hacer</option>
              <option value="en_progreso">En progreso</option>
              <option value="finalizada">Finalizada</option>
            </select>
          </div>

          <div class="actions">
            <button class="btn btn-primary" type="submit">Guardar</button>
            <button class="btn btn-ghost" type="button" id="btn-clear">Limpiar</button>
          </div>

          <!-- Acción del POST -->
          <input type="hidden" name="action" value="create" />
          <!-- estos son útiles cuando editas desde el front (no SSR) -->
          <input type="hidden" name="id_tarea" />
        </div>
      </form>

      <!-- Lista simple (una columna) -->
      <section class="board-grid">
        <div class="col">
          <article class="card h-100 shadow-sm">
            <div class="card-body">
              <div class="col-head">
                <h2 class="col-title">Mis tareas</h2>
                <span class="badge">{tasks.length}</span>
              </div>

              <div class="stack">
                {tasks.map((t) => (
                  <article class="card task-card shadow-sm"
                    data-id_tarea={t.id_tarea}
                    data-titulo={t.titulo}
                    data-descripcion={t.descripcion || ""}
                    data-prioridad={t.prioridad}
                    data-estado={t.estado}>
                    <div class="card-body">
                      <div class="task-head">
                        <h3 class="h6 card-title">{t.titulo}</h3>
                        <span class={`pill ${t.prioridad === 'alta' ? 'danger' : t.prioridad === 'media' ? 'warn' : 'mute'}`}>
                          {t.prioridad}
                        </span>
                      </div>
                      {t.descripcion && <p class="card-text">{t.descripcion}</p>}
                      <div class="task-meta">
                        <span class="pill mute">{t.estado}</span>
                      </div>

                      <div class="task-actions">
                        <!-- Cambiar estado rápido -->
                        <form method="POST" class="inline">
                          <input type="hidden" name="action" value="set_status" />
                          <input type="hidden" name="id_tarea" value={t.id_tarea} />
                          <input type="hidden" name="estado" value="por_hacer" />
                          <button class="btn btn-ghost" type="submit">Por hacer</button>
                        </form>

                        <form method="POST" class="inline">
                          <input type="hidden" name="action" value="set_status" />
                          <input type="hidden" name="id_tarea" value={t.id_tarea} />
                          <input type="hidden" name="estado" value="en_progreso" />
                          <button class="btn btn-ghost" type="submit">En progreso</button>
                        </form>

                        <form method="POST" class="inline">
                          <input type="hidden" name="action" value="set_status" />
                          <input type="hidden" name="id_tarea" value={t.id_tarea} />
                          <input type="hidden" name="estado" value="finalizada" />
                          <button class="btn btn-ghost" type="submit">Finalizada</button>
                        </form>

                        <span class="spacer"></span>
                        <button class="btn btn-ghost btn-edit" type="button">Editar</button>

                        <!-- Borrar -->
                        <form method="POST" class="inline" onsubmit="return confirm('¿Eliminar tarea?')">
                          <input type="hidden" name="action" value="delete" />
                          <input type="hidden" name="id_tarea" value={t.id_tarea} />
                          <button class="btn btn-danger" type="submit">Eliminar</button>
                        </form>
                      </div>
                    </div>
                  </article>
                ))}
              </div>
            </div>
          </article>
        </div>
      </section>
    </main>
  </body>
</html>